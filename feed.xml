<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://firsh.me/feed.xml" rel="self" type="application/atom+xml" /><link href="http://firsh.me/" rel="alternate" type="text/html" /><updated>2017-06-19T00:24:11+08:00</updated><id>http://firsh.me/</id><title type="html">飞鱼。</title><subtitle>张建新个人博客</subtitle><author><name>飞鱼</name></author><entry><title type="html">面试题 java Development。</title><link href="http://firsh.me/2017/06/19/mianshi-Java-development/" rel="alternate" type="text/html" title="面试题 java Development。" /><published>2017-06-19T00:00:00+08:00</published><updated>2017-06-19T00:00:00+08:00</updated><id>http://firsh.me/2017/06/19/mianshi-Java-development</id><content type="html" xml:base="http://firsh.me/2017/06/19/mianshi-Java-development/">&lt;h2 id=&quot;说明&quot;&gt;说明&lt;/h2&gt;

&lt;p&gt;这篇文章翻译自一位外国友人的关于面试后端程序员的文章，我比较喜爱这篇文章。一是因为它极大的拓宽了我的视角，另一方面是其中的一些问题非常具有启发性。不仅对于面试者，对于面试官来说也是个不错的参考。于是迫不及待的翻译了一下，给各位看官做个参考。&lt;/p&gt;

&lt;p&gt;这篇文章中，许多问题我并没有完全理解，所以翻译可能存在不准确的地方。如果有读者发现有一些翻译有误或者不好的地方，请不吝赐教。&lt;/p&gt;

&lt;p&gt;原文参见 &lt;a href=&quot;https://github.com/arialdomartini&quot;&gt;@arialdomartini&lt;/a&gt;的: &lt;a href=&quot;https://github.com/arialdomartini/Back-End-Developer-Interview-Questions&quot;&gt;Back-End Developer Interview Questions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以下是原文翻译。&lt;/p&gt;

&lt;h1 id=&quot;后端开发面试题&quot;&gt;后端开发面试题&lt;/h1&gt;

&lt;p&gt;在面试的时候，我并不特别喜欢问一些技术性的问题。我更喜欢的方式是这样的: 和面试者坐在一起，看一些实际的代码，解决一些实际的问题。并且用一整天的时间，让团队所有成员轮流和面试者进行结对编程。虽然如此，但是一些技术问题仍然可以用来很好地启动一段有深度的谈话，能够让面试者和面试官相互都有更加深入的了解。&lt;/p&gt;

&lt;p&gt;这个仓库包含了可以用来考核面试者的一系列后端面试题。但绝不是说，面试官必须用每个面试题来考核面试者（这样可能要耗费好几个小时）。根据你期望面试者拥有的技能，从这个列表中有选择的挑一些题目，可以帮助你在特定技能上考核面试者。&lt;/p&gt;

&lt;p&gt;应当承认的是，这个项目的灵感来自于&lt;a href=&quot;https://github.com/darcyclarke&quot;&gt;@darcyclarke&lt;/a&gt;的文章&lt;a href=&quot;https://github.com/darcyclarke/Front-end-Developer-Interview-Questions&quot;&gt;Front-end Job Interview Questions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意:&lt;/strong&gt; 请记住，这些面试题中有许多问题是开放式的，能引导讨论一些有趣的问题。相比那些有直接答案的问题来说，这种问题能够让你对面试者的能力有更多的了解。再一次强调，我认为仅仅是问问题是不够的。要通过与面试者较长时间的结对编程来完成面试: 这是你们相互了解对方的风格和方法、让面试者了解未来工作的最佳手段之一。&lt;/p&gt;

&lt;h2 id=&quot;目录&quot;&gt;&lt;a name=&quot;toc&quot;&gt;目录&lt;/a&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#general&quot;&gt;通用问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#open&quot;&gt;开放式问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#patterns&quot;&gt;设计模式相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#design&quot;&gt;代码设计相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#languages&quot;&gt;语言相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#web&quot;&gt;Web相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#databases&quot;&gt;数据库相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nosql&quot;&gt;非关系型数据库相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#codeversioning&quot;&gt;代码版本管理相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concurrency&quot;&gt;并发问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#distributed&quot;&gt;分布式系统相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#management&quot;&gt;软件生命周期和团队管理相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#algorithms&quot;&gt;逻辑和算法相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#architecture&quot;&gt;软件架构相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#soa&quot;&gt;面向服务架构(SOA)和微服务(Microservice)相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#security&quot;&gt;安全相关问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#billgates&quot;&gt;比尔盖茨式问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#snippets&quot;&gt;代码示例问题&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;general&quot;&gt;通用问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;语言设计中空引用(&lt;a href=&quot;http://programmers.stackexchange.com/questions/12777/are-null-references-really-a-bad-thing&quot;&gt;null reference&lt;/a&gt;)的存在有什么问题？假设你想要将空引用的概念从你的首选语言中移除，可能导致什么结果？&lt;/li&gt;
  &lt;li&gt;为什么函数式编程重要？什么时候适用函数式语言？&lt;/li&gt;
  &lt;li&gt;设计(design)、架构(architecture)、功能(functionality)和美学(aesthetic)之间有什么区别？讨论一下。&lt;/li&gt;
  &lt;li&gt;微软、谷歌、欧朋(opera)和火狐这类公司是如何从他们的浏览器中获利的？&lt;/li&gt;
  &lt;li&gt;为什么打开TCP套接字有很大的开销？&lt;/li&gt;
  &lt;li&gt;封装的重要性体现在哪儿？&lt;/li&gt;
  &lt;li&gt;什么是实时系统？它与普通系统有什么区别？&lt;/li&gt;
  &lt;li&gt;实时语言(real-time language)和堆内存分配(heap memory allocation)之间的关系是什么？&lt;/li&gt;
  &lt;li&gt;不变性(Immutability)是指: (变量的)值只能在创建的时候被设置一次，之后就不能被改变。为什么不变性对写更加安全的代码有帮助？&lt;/li&gt;
  &lt;li&gt;可变值(mutable values)和不可变值(immutable values)有哪些优缺点？&lt;/li&gt;
  &lt;li&gt;什么是O/R阻抗失衡(Object-Relational impedence mismatch)？&lt;/li&gt;
  &lt;li&gt;如果你需要使用缓存，你使用哪些原则来确定缓存的大小？&lt;/li&gt;
  &lt;li&gt;TCP和HTTP有什么区别？&lt;/li&gt;
  &lt;li&gt;在客户端渲染(client-side rendering)和服务端渲染(server-side rendering)之间，你是如何权衡的？&lt;/li&gt;
  &lt;li&gt;如何在一个不可靠的协议之上构建一个可靠的通信协议？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;open&quot;&gt;开放式问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么人们会抵制变化？&lt;/li&gt;
  &lt;li&gt;如何向你的祖母解释什么是线程？&lt;/li&gt;
  &lt;li&gt;作为一个软件工程师，你想要既要有创新力，又要产出具有可预测性。采用什么策略才能使这两个目标可以共存呢？&lt;/li&gt;
  &lt;li&gt;什么是好的代码？&lt;/li&gt;
  &lt;li&gt;解释什么是流(Streaming)和如何实现一个流？&lt;/li&gt;
  &lt;li&gt;假设你的公司给你一周的时间，用来改善你和同事的生活: 你将如何使用这一周？&lt;/li&gt;
  &lt;li&gt;本周你学了什么？&lt;/li&gt;
  &lt;li&gt;所有的设计中都会有美学元素(aesthetic element)的存在。问题是，你认为美学元素是你的朋友还是敌人？&lt;/li&gt;
  &lt;li&gt;列出最近你读过的5本书。&lt;/li&gt;
  &lt;li&gt;假设目前有个大型公司（非常有钱），他们的开发流程是瀑布式流程（Waterfall），如果需要你在他们公司引入持续交付（&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_delivery&quot;&gt;Continue Devivery&lt;/a&gt;），你会怎么做？&lt;/li&gt;
  &lt;li&gt;我们来谈谈”&lt;em&gt;重复造轮子&lt;/em&gt;”,”&lt;em&gt;非我发明症&lt;/em&gt;”, “&lt;em&gt;吃自己做出来的狗粮&lt;/em&gt;“的这些做法吧。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(注: 重复造轮子: Reinventing the wheel; 非我发明症:Not Invented Here Syndrome; 吃自己做出来的狗粮: Eating Your Own Dog Food)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在你当前的工作流中，什么事情是你计划下一步需要自动化的？&lt;/li&gt;
  &lt;li&gt;为什么写软件是困难的？是什么使软件的维护变得困难？&lt;/li&gt;
  &lt;li&gt;你更喜欢在全新项目（Green Field Project）上工作还是在已有项目(Brown Field Project)基础上工作？为什么？&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alex/what-happens-when&quot;&gt;当你在浏览器地址栏输入google.com回车之后都发生了什么?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;当操作系统CPU处于空闲的时候，它可能在处理哪些事情？&lt;/li&gt;
  &lt;li&gt;如何向一个5岁的孩子解释什么是Unicode/数据库事务？&lt;/li&gt;
  &lt;li&gt;如何维护单体架构(monolithic architecture)？&lt;/li&gt;
  &lt;li&gt;一个”专业的开发者”意味着什么？&lt;/li&gt;
  &lt;li&gt;软件开发是艺术、是技艺还是工程？你的观点是什么？&lt;/li&gt;
  &lt;li&gt;“喜欢这个的人也喜欢…“，如何在一个电子商务商店里实现这种功能？&lt;/li&gt;
  &lt;li&gt;为什么在创新上，企业会比创业公司慢些？&lt;/li&gt;
  &lt;li&gt;为什么说，你不应该尝试应用自己发明或者设计的密码学？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;patterns&quot;&gt;设计模式相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;请用一个例子表明，全局对象是邪恶的存在。&lt;/li&gt;
  &lt;li&gt;假设你工作的系统不支持事务性，你会如何从头开始实现它？&lt;/li&gt;
  &lt;li&gt;什么是好莱坞原则（Hollywood Principles）？&lt;/li&gt;
  &lt;li&gt;关于迪米特法则(最少知识原则): 写一段代码违反它, 然后修复它。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（注: 迪米特法则：the Law of Demeter, 最少知识原则： the Principle of Least Knowledge）&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Active-Record模式有什么限制和缺陷？&lt;/li&gt;
  &lt;li&gt;Data-Mapper模式和Active-Record模式有什么区别？&lt;/li&gt;
  &lt;li&gt;空对象模式(Null Object Pattern)的目的是什么？&lt;/li&gt;
  &lt;li&gt;为什么组合(Composition)比继承(Inheritance)更好？&lt;/li&gt;
  &lt;li&gt;什么是反腐败层(Anti-corruption Layer)?&lt;/li&gt;
  &lt;li&gt;你可以写一个线程安全的单例(Singleton)类吗？&lt;/li&gt;
  &lt;li&gt;数据抽象(Data Abstraction)能力是指能改变实现而不影响客户端的这种能力。请构造一个一个例子，违反这个特性，并且尝试修复它。&lt;/li&gt;
  &lt;li&gt;你是如何处理依赖关系地狱(Dependency Hell)的？&lt;/li&gt;
  &lt;li&gt;为什么说goto语句是恶魔般的存在？&lt;/li&gt;
  &lt;li&gt;健壮性是进行软件设计时的一个通用原则，它建议 &lt;em&gt;“发送时要保守，接收时要开放”&lt;/em&gt;。这也经常被写成，“做一个有耐心的读者，做一个谨慎的作者”。你能解释一些这背后的逻辑吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;译者注： “发送时要保守，接收时要开发”的原文是： “Be conservative in what you send, be liberal in what you accept”，有点类似于“严于律己，宽于待人”的意味。&lt;/p&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;design&quot;&gt;代码设计相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;你在进行软件设计时会考虑软件测试吗？软件测试是如何影响软件设计的？&lt;/li&gt;
  &lt;li&gt;内聚和耦合的区别是什么？&lt;/li&gt;
  &lt;li&gt;重构在哪些场景下有用？&lt;/li&gt;
  &lt;li&gt;代码中的注释有用吗？&lt;/li&gt;
  &lt;li&gt;设计和架构有什么区别？&lt;/li&gt;
  &lt;li&gt;为什么在测试驱动开发(TDD)中是先写测试，再写代码？&lt;/li&gt;
  &lt;li&gt;C++支持多继承，Java允许类实现多个接口。这些特性对正交性有什么影响？使用多继承和使用多接口有区别吗？[这个问题来自Andrew .Hunt 和 David Thomas写的《程序员修炼之道》]&lt;/li&gt;
  &lt;li&gt;在存储过程（Stored Procedures）中写业务逻辑有什么优缺点？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;languages&quot;&gt;语言相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;告诉我你的首选语言的三个最坏的缺陷。&lt;/li&gt;
  &lt;li&gt;为什么现在函数式编程这么越来越受关注？&lt;/li&gt;
  &lt;li&gt;闭包是什么？它有什么用途？闭包和类有什么共同点？&lt;/li&gt;
  &lt;li&gt;泛型有什么用途？&lt;/li&gt;
  &lt;li&gt;什么是高阶函数？有什么用途？用你的首选语言写个例子出来。&lt;/li&gt;
  &lt;li&gt;讨论一下，如何写一个循环，然后把它转换成递归函数，要避免易变性。&lt;/li&gt;
  &lt;li&gt;有些语言将函数视为第一公民，这是什么意思？&lt;/li&gt;
  &lt;li&gt;用一个例子说明匿名函数是有用的。&lt;/li&gt;
  &lt;li&gt;什么是动态方法调度(Dynamic Method Dispatch)？&lt;/li&gt;
  &lt;li&gt;名字空间(Namespace)有什么用？有什么可以替代它的吗？&lt;/li&gt;
  &lt;li&gt;谈谈Java和C#之间的互操作性(Interoperability) (任选其他两门语言都行)&lt;/li&gt;
  &lt;li&gt;为什么很多软件工程师不喜欢Java？&lt;/li&gt;
  &lt;li&gt;你认为好的语言好在哪里？差的语言差在哪里？&lt;/li&gt;
  &lt;li&gt;写两个函数，一个是”引用透明的(Referentially Transparent)”，另一个是”引用不透明的(Referentially Opaque)”。讨论之。&lt;/li&gt;
  &lt;li&gt;什么是栈？什么是堆？&lt;/li&gt;
  &lt;li&gt;为什么一个语言中，”函数是第一公民”是很重要的？&lt;/li&gt;
  &lt;li&gt;模式匹配(Pattern Matching)和Switch语句(Switch clauses)的区别在哪儿？&lt;/li&gt;
  &lt;li&gt;为什么有些语言设计上没有异常机制？这有什么优缺点？&lt;/li&gt;
  &lt;li&gt;如果&lt;code class=&quot;highlighter-rouge&quot;&gt;Cat&lt;/code&gt;是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Animal&lt;/code&gt;, 那么&lt;code class=&quot;highlighter-rouge&quot;&gt;TaskCare&amp;lt;Cat&amp;gt;&lt;/code&gt;是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;TakeCare&amp;lt;Animal&amp;gt;&lt;/code&gt;吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;web&quot;&gt;web相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么”第一方cookie(first-party cookie)”和”第三方cookie(third-party cookie)”被如此不同的对待？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;databases&quot;&gt;数据库相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果要你将一个项目从MySQL迁移至PostgreSQL中，你会如何迁移？&lt;/li&gt;
  &lt;li&gt;为什么&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table WHERE field = null&lt;/code&gt;不能匹配空的字段？&lt;/li&gt;
  &lt;li&gt;什么是ACID(原子性，一致性，隔离性，持久性)原则？&lt;/li&gt;
  &lt;li&gt;你是如何进行数据库模式(Database schema)迁移的？&lt;/li&gt;
  &lt;li&gt;延迟加载(lazy loading)是如何实现的？什么场景下有用？他有什么缺陷？&lt;/li&gt;
  &lt;li&gt;什么是N+1问题？&lt;/li&gt;
  &lt;li&gt;如何找出应用中开销最大的查询？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;nosql&quot;&gt;非关系型数据库相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;什么是最终一致性(Eventual Consistency)？&lt;/li&gt;
  &lt;li&gt;关于CAP理论，举一些CP、AP、CA系统的例子。&lt;/li&gt;
  &lt;li&gt;NoSQL是如何解决可伸缩性的挑战的？&lt;/li&gt;
  &lt;li&gt;什么情况下你会使用类似于MongoDB的文档数据库而不是关系型数据库（如Mysql或者PostgreSQL）？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;codeversioning&quot;&gt;代码版本管理相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么在Mercurial或者git中(管理)分支比SVN容易？&lt;/li&gt;
  &lt;li&gt;分散式版本控制系统（比如git），相比集中式版本控制系统（如svn）有哪些优势和劣势？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(注:集中式版本控制系统: Centralized Version Control Systems；分散式版本控制系统: Distributed Version Control Systems)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;能描述一下什么是GitHubFlow和GitFlow工作流吗？&lt;/li&gt;
  &lt;li&gt;什么是rebase？&lt;/li&gt;
  &lt;li&gt;为什么合并操作(merge)在Mercurial和git中比在SVN和CVS中容易？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;concurrency&quot;&gt;并发问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;为什么我们需要并发呢？解释一下。&lt;/li&gt;
  &lt;li&gt;为什么测试多线程/并发代码这么困难？&lt;/li&gt;
  &lt;li&gt;什么是竞争条件（Race Condition）？用任何一个语言写一个例子。&lt;/li&gt;
  &lt;li&gt;什么是死锁？用代码解释一下。&lt;/li&gt;
  &lt;li&gt;什么是饿死？&lt;/li&gt;
  &lt;li&gt;什么是Wait-Free算法？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;distributed&quot;&gt;分布式系统相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;怎么测试一个分布式系统？&lt;/li&gt;
  &lt;li&gt;什么场景下你会在两个系统中采用异步通信机制？&lt;/li&gt;
  &lt;li&gt;远程过程调用的通用缺点是什么？&lt;/li&gt;
  &lt;li&gt;如果你为了可扩展性和鲁棒性而构建一个分布式的系统，分别在封闭安全的网络环境情况下，和地理上的位置不同但是网络环境不是封闭和安全的情况下，你会考虑什么不同的事情？&lt;/li&gt;
  &lt;li&gt;在Web应用中如何管理容错性？在桌面端呢？&lt;/li&gt;
  &lt;li&gt;在分布式系统中，如何处理故障？&lt;/li&gt;
  &lt;li&gt;让我们来谈谈网络分裂(network partitions)后有的几种恢复的手段吧。&lt;/li&gt;
  &lt;li&gt;你认为分布式计算中有哪些谬论？&lt;/li&gt;
  &lt;li&gt;你在什么时候会使用Request/Response模式，什么时候使用Publish/Subscribe模式？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;management&quot;&gt;软件生命周期和团队管理相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;什么是敏捷（Agility）？&lt;/li&gt;
  &lt;li&gt;你是如何处理遗留代码（Legacy Code）的？&lt;/li&gt;
  &lt;li&gt;假设我是你们公司的CEO，请向我解释什么是看板，并且说服我在它上面投资。&lt;/li&gt;
  &lt;li&gt;敏捷（Agility）和瀑布（Waterfall）之间的最大区别是什么？&lt;/li&gt;
  &lt;li&gt;作为团队管理者，你对会议太多这个问题是如何处理的？&lt;/li&gt;
  &lt;li&gt;你会如何处理延期很长时间了的项目？&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“&lt;em&gt;个体与交互重于过程和工具&lt;/em&gt;“和”&lt;em&gt;客户协作重于合同谈判&lt;/em&gt;“占了敏捷宣言（Agile Manifesto）的一半，谈论一下这两个观念。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;如果你是你们公司的CTO，你会采取什么样的决策？&lt;/li&gt;
  &lt;li&gt;你觉得项目经理有用吗？&lt;/li&gt;
  &lt;li&gt;如果要你组织一个弹性工作制的开发团队（即没有强制工作时间的要求），并且假期制度是”按需休假”，你会如何做？&lt;/li&gt;
  &lt;li&gt;你会如何管理一个人员流动非常高的团队？如何在不加薪的条件下说服团队成员不要离开？&lt;/li&gt;
  &lt;li&gt;除了代码之外，你最关注你的同事的哪3项素质？&lt;/li&gt;
  &lt;li&gt;关于代码，你最希望非技术人员能知道的的三件事是什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;algorithms&quot;&gt;逻辑和算法相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;只用LIFO栈如何构造一个FIFO队列？只用FIFO队列如何构造一个LIFO栈？&lt;/li&gt;
  &lt;li&gt;写一段有栈溢出的代码。&lt;/li&gt;
  &lt;li&gt;写一个尾递归版本的阶乘函数。&lt;/li&gt;
  &lt;li&gt;使用任何一个语言，写一个REPL，功能是echo你输入的字符串。然后将它演化成一个逆波兰表达式的计算器。&lt;/li&gt;
  &lt;li&gt;如果需要你设计一个文件系统磁盘碎片整理程序，你会如何设计？&lt;/li&gt;
  &lt;li&gt;写一个生成随机迷宫的程序。&lt;/li&gt;
  &lt;li&gt;写一段有内存泄漏的示例代码。&lt;/li&gt;
  &lt;li&gt;随机生成一个的数字序列，里面每个数字都不同。&lt;/li&gt;
  &lt;li&gt;写一个简单的垃圾回收系统。&lt;/li&gt;
  &lt;li&gt;使用任何一门语言，写一个基本的消息代理。&lt;/li&gt;
  &lt;li&gt;写一个基础的web服务器，然后画一张线路图，展示你将来还想要实现的功能。&lt;/li&gt;
  &lt;li&gt;如何对一个10GB的文件进行排序？如果是10TB的数据，你会采用什么方法？&lt;/li&gt;
  &lt;li&gt;请实现&lt;code class=&quot;highlighter-rouge&quot;&gt;rnd()&lt;/code&gt;函数&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;architecture&quot;&gt;软件架构相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;什么情况下缓存是没用的，甚至是危险的？&lt;/li&gt;
  &lt;li&gt;为什么事件驱动的架构能提高可扩展性(scalability)？&lt;/li&gt;
  &lt;li&gt;什么样的代码是可读性强的代码？&lt;/li&gt;
  &lt;li&gt;紧急设计(Emergent Design)和演化架构(Evolutionary Architecture)之间的区别是什么？&lt;/li&gt;
  &lt;li&gt;横向扩展(scale out) vs 纵向扩展(scale up): 有什么区别？分别在什么场景下使用？&lt;/li&gt;
  &lt;li&gt;分布式系统中如何处理”故障切换(failover)”和”用户会话(user session)”？&lt;/li&gt;
  &lt;li&gt;什么是CQRS(Command Query Responsibility Segregation)?他和最早的Command-Query Separation原则有什么区别？&lt;/li&gt;
  &lt;li&gt;什么是三层架构？&lt;/li&gt;
  &lt;li&gt;如何设计一个可扩展性高的系统？&lt;/li&gt;
  &lt;li&gt;处理C10k问题的策略有哪些？&lt;/li&gt;
  &lt;li&gt;如果让你来设计一个去中心化的P2P系统，你会如何设计？&lt;/li&gt;
  &lt;li&gt;为什么CGI的扩展性不好？&lt;/li&gt;
  &lt;li&gt;在设计系统时，你如何防止供应商依赖(&lt;a href=&quot;https://sourcemaking.com/antipatterns/vendor-lock-in&quot;&gt;Vendor Lock-in&lt;/a&gt;)？&lt;/li&gt;
  &lt;li&gt;在可扩展性上，发布/订阅(Publish-Subscribe)模式有什么缺点？&lt;/li&gt;
  &lt;li&gt;80年代以后，CPU有哪些变化？这些变化，对编程产生了什么影响？&lt;/li&gt;
  &lt;li&gt;性能生命周期(performace lifecycle)中，你认为哪个部分是需要考虑进去的？ 如何管理？&lt;/li&gt;
  &lt;li&gt;除了恶意攻击造成的拒绝服务现象以外，哪些设计或者架构上的问题会导致拒绝服务？&lt;/li&gt;
  &lt;li&gt;性能和可扩展性之间有什么关系？&lt;/li&gt;
  &lt;li&gt;什么时候紧耦合是OK的？&lt;/li&gt;
  &lt;li&gt;一个系统要有什么特征才能适配云计算环境(Cloud Ready)？&lt;/li&gt;
  &lt;li&gt;Does unity of design imply an aristocracy of architects?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;soa&quot;&gt;面向服务架构(SOA)和微服务(Microservice)相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在SOA中，为什么长期存活的事务(Long-lived transation)不被看好，而Saga却被看好？&lt;/li&gt;
  &lt;li&gt;SOA和MicroService之间有什么区别？&lt;/li&gt;
  &lt;li&gt;我们来谈谈Web服务的版本管理、版本兼容性、重大变更管理这些事情吧.&lt;/li&gt;
  &lt;li&gt;在saga中事务和补偿操作(compensation operation)之间的区别是什么？在SOA中呢？&lt;/li&gt;
  &lt;li&gt;微服务不能做得太”微”，你认为什么时候微服务太”微”了？&lt;/li&gt;
  &lt;li&gt;MicroService架构的优劣是什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;security&quot;&gt;安全相关问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;什么是双因素认证(Two Factor Authentication)？在一个已有的Web应用中，你如何实现这种机制？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;billgates&quot;&gt;比尔盖茨式问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果你把一面镜子放在扫描仪上，会发生什么？&lt;/li&gt;
  &lt;li&gt;假设有一个和你完全一样的克隆人，而他是你的上司，你愿意和他工作吗？&lt;/li&gt;
  &lt;li&gt;现在请你面试一下我。&lt;/li&gt;
  &lt;li&gt;为什么Quora上的回答会比Yahoo Answer上的回答好？&lt;/li&gt;
  &lt;li&gt;对手是现代语言，你的任务是要为Cobol辩护，你会如何进行？&lt;/li&gt;
  &lt;li&gt;10年后的你是什么样子？&lt;/li&gt;
  &lt;li&gt;假设你是我老板，我被解雇了。你会如何通知我？&lt;/li&gt;
  &lt;li&gt;我想要重构一个系统，而你想要从头重写。我们来争论一下该怎么弄吧。然后我们反转角色，再争论一下。&lt;/li&gt;
  &lt;li&gt;老板要你对公司撒谎，你的反应是什么？&lt;/li&gt;
  &lt;li&gt;如果你可以穿越到以前，你会给年轻时候的你什么建议？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####&lt;a href=&quot;#toc&quot;&gt;[↑]&lt;/a&gt; &lt;a name=&quot;snippets&quot;&gt;代码示例问题:&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;这段Javascript函数的输出是什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hookupevents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;关于类型擦除(Type Erasure)，这段Java代码的输出是什么？为什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// evaluates to true&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Equal&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;你能指出哪儿有内存泄漏吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEFAULT_INITIAL_CAPACITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ensureCapacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
   
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EmptyStackException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Ensure space for at least one more element, roughly
     * doubling the capacity each time the array needs to grow.
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ensureCapacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;语句，或者更加通用点，条件表达式通常是过程式编程/命令式编程的形式。你能去掉这段代码中的&lt;code class=&quot;highlighter-rouge&quot;&gt;switch&lt;/code&gt;语句，用面向对象的方式来修改这段代码吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Formatter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doTheJob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;askForPermission&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FAIL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OK&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s%s&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;你能去掉这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;语句，将它改成更加面向对象吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TheService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TheService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FooRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fileHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fooRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rewrittenUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getXmlFileFromFileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executionId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExecutionIdFromFileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executionId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rewrittenUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;knownFoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fooRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFooByXmlFileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rewrittenUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;knownFoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;knownFoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DoThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;如何重构这段代码？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;HRESULT&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;S_OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Operation1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Operation2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Operation3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SUCCEEDED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Operation4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OPERATION4FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OPERATION3FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OPERATION2FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OPERATION1FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>飞鱼</name></author><summary type="html">说明</summary></entry><entry><title type="html">nodejs + npm 版本切换(Mac/Windows/Linux)</title><link href="http://firsh.me/2017/06/15/npm-node-version-q/" rel="alternate" type="text/html" title="nodejs + npm 版本切换(Mac/Windows/Linux)" /><published>2017-06-15T00:00:00+08:00</published><updated>2017-06-15T00:00:00+08:00</updated><id>http://firsh.me/2017/06/15/npm-node-version-q</id><content type="html" xml:base="http://firsh.me/2017/06/15/npm-node-version-q/">&lt;p&gt;因项目需求需要多次切换npm以及nodejs，所写出这个文章以供参考。&lt;/p&gt;

&lt;h1 id=&quot;使用npm-n进行版本切换对nodejs的版本控制&quot;&gt;使用npm n进行版本切换，对nodejs的版本控制。&lt;/h1&gt;

&lt;h2 id=&quot;安装n控制器&quot;&gt;安装N控制器。&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm install -g n
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;安装nodejs的最新版本&quot;&gt;安装nodejs的最新版本&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ n 5.4.1  --&amp;gt;（安装node.js 5.4.1版本）

$ n latest  --&amp;gt;（安装node.js最新版本）

$ n stable   --&amp;gt;（安装node.js稳定版本）

$ n rm 4.0.0   --&amp;gt;（删除某个版本）

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;如图&quot;&gt;如图&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/QQ20170615-215055@2x.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
$ sudo n （用上下选择版本会车切换版本）

#以笔者装的为例，输入以上代码后会出现
    node/4.4.7
    node/6.5.0

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/QQ20170615-214859@2x.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;</content><author><name>飞鱼</name></author><summary type="html">因项目需求需要多次切换npm以及nodejs，所写出这个文章以供参考。</summary></entry><entry><title type="html">使用travis-ci 来持续集成jekyll静态博客。</title><link href="http://firsh.me/2017/06/13/travis-ci-myblog/" rel="alternate" type="text/html" title="使用travis-ci 来持续集成jekyll静态博客。" /><published>2017-06-13T00:00:00+08:00</published><updated>2017-06-13T00:00:00+08:00</updated><id>http://firsh.me/2017/06/13/travis-ci-myblog</id><content type="html" xml:base="http://firsh.me/2017/06/13/travis-ci-myblog/">&lt;p&gt;CICD (travis) for my blog&lt;/p&gt;

&lt;h1 id=&quot;使用travis-ci-来持续集成jekyll静态博客&quot;&gt;使用travis-ci 来持续集成jekyll静态博客.&lt;/h1&gt;

&lt;p&gt;##简介
Travis CI提供一个在线的持续集成服务，用来构建托管在github上的代码。
许多知名的开源项目使用它来自动构建测试代码,它支持hexo的运行环境node.js。
原理很简单，Travis会在你每一次在github上提交代码后，生成一个Linux虚拟机来运行你配置好的任务,
生成和部署hexo只需要一个命令 hexo gd ，但是Travis CI需要有我们的github项目上传代码的权限，
所以我们需要使用SSH key来使Travis CI拥有权限。还有一些其他的问题也都参开hexo作者的博文解决了，
用Travis CI自动部署网站到Github。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#安装travis-ci的命令行工具&lt;/span&gt;

gem install travis

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#登录Travis CI&lt;/span&gt;
travis login --auto &lt;span class=&quot;c&quot;&gt;#这里可以用token登录。&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#使用travis命令行工具加密私钥&lt;/span&gt;
travis encrypt-file id_rsa --add
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#travis CI解密配置,这部分内容需要配置在 .travis.yml 里,注意修改秘钥&lt;/span&gt;

- openssl aes-256-cbc -K &lt;span class=&quot;nv&quot;&gt;$encrypted_26b4962af0e7_key&lt;/span&gt; -iv &lt;span class=&quot;nv&quot;&gt;$encrypted_26b4962af0e7_iv&lt;/span&gt;
  -in id_rsa.enc -out ~/.ssh/id_rsa -d
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;.travis.yml&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;s&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;node_js&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;node_js&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;4.1'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;before_install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;openssl aes-256-cbc -K $encrypted_26b4962af0e7_key -iv $encrypted_26b4962af0e7_iv&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;-in id_rsa.enc -out ~/.ssh/id_rsa -d&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod 600 ~/.ssh/id_rsa&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;eval $(ssh-agent)&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh-add ~/.ssh/id_rsa&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp ssh_config ~/.ssh/config&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config --global user.name &quot;pangjian&quot;&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config --global user.email &quot;pangjian1010@gmail.com&quot;&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install hexo-cli -g&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;npm install&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hexo -version&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hexo clean&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hexo g&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hexo deploy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;转载请注明出处：https://firsh.me/2017/06/13/travis-ci-myblog/&lt;/li&gt;
&lt;/ul&gt;</content><author><name>飞鱼</name></author><summary type="html">CICD (travis) for my blog</summary></entry><entry><title type="html">nodejs package ocr</title><link href="http://firsh.me/2017/06/13/npm-ocr-nodejs/" rel="alternate" type="text/html" title="nodejs package ocr" /><published>2017-06-13T00:00:00+08:00</published><updated>2017-06-13T00:00:00+08:00</updated><id>http://firsh.me/2017/06/13/npm-ocr-nodejs</id><content type="html" xml:base="http://firsh.me/2017/06/13/npm-ocr-nodejs/">&lt;h1 id=&quot;ng-ocr&quot;&gt;ng-ocr&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/zmatsh/OCR-NODEJS&quot;&gt;&lt;img src=&quot;https://travis-ci.org/zmatsh/OCR-NODEJS.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ngocr is an OCR library pure JavaScript for node.js.
We use &lt;a href=&quot;https://github.com/antimatter15/ocrad.js/&quot;&gt;ocrad.js&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install ng-ocr -S
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;how-to-use&quot;&gt;How to use&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;test/fixture/hello_world.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Simple :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Ngocr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decodeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test/fixture/hello_world.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello World!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From Buffer:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Ngocr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test/fixture/hello_world.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decodeBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello World!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From Stream:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Ngocr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createReadStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test/fixture/hello_world.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Ngocr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decodeStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello World!&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;todo&quot;&gt;Todo&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;JPG support&lt;/li&gt;
  &lt;li&gt;gif support&lt;/li&gt;
  &lt;li&gt;stream interface (i love pipe)&lt;/li&gt;
  &lt;li&gt;https://www.npmjs.com/package/n-ocr&lt;/li&gt;
&lt;/ul&gt;</content><author><name>飞鱼</name></author><summary type="html">ng-ocr</summary></entry><entry><title type="html">docker clear up for mac</title><link href="http://firsh.me/2017/06/13/docker-mac-clear-up/" rel="alternate" type="text/html" title="docker clear up for mac" /><published>2017-06-13T00:00:00+08:00</published><updated>2017-06-13T00:00:00+08:00</updated><id>http://firsh.me/2017/06/13/docker-mac-clear-up</id><content type="html" xml:base="http://firsh.me/2017/06/13/docker-mac-clear-up/">&lt;h1 id=&quot;1main&quot;&gt;1、Main&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;清理mac上Docker占用的磁盘空间&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;11内容&quot;&gt;1.1、内容：&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Docker依赖Linux系统的cgroup实现，在mac系统中运行的时候，Docker会启动一个虚拟机中的Linux内核，并在硬盘上放一个 qcow2 格式的磁盘镜像文件。这个文件会随着Docker的使用不断膨胀，即使删除不用的Docker Image和Container也不会缩小。我在测试完一个自动化工具的Dockerfile改写之后，Docker.qcow2文件就达到42GB了。

Google搜了一圏发现一个叫Théo Chamley的法国人写了一个脚本释放Docker.qcow2文件占用的空间。基本原理是用 docker save 命令保存要保留的image，然后关闭Docker，删除Docker.qcow2，再启动Docker，它会自动重建，最后用 docker load 命令恢复保留的image。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Copyright 2017 Théo Chamley&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Permission is hereby granted, free of charge, to any person obtaining a copy of &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# this software and associated documentation files (the &quot;Software&quot;), to deal in the Software&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# without restriction, including without limitation the rights to use, copy, modify, merge,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# to whom the Software is furnished to do so, subject to the following conditions:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The above copyright notice and this permission notice shall be included in all copies or&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# substantial portions of the Software.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;IMAGES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;This will remove all your current containers and images except for:&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IMAGES&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&quot;Are you sure? [yes/NO] &quot;&lt;/span&gt; -n 1 -r
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# (optional) move to a new line&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; ! &lt;span class=&quot;nv&quot;&gt;$REPLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~ ^[Yy]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi


&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TMP_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;mktemp -d&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;pushd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TMP_DIR&lt;/span&gt; &amp;gt;/dev/null

open -a Docker
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Saving the specified images&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;image &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IMAGES&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Saving &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | base64&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    docker save -o &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Done.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Cleaning up&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Quiting Docker&quot;&lt;/span&gt;
osascript -e &lt;span class=&quot;s1&quot;&gt;'quit app &quot;Docker&quot;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;docker info &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;
    sleep 1
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Removing Docker.qcow2 file&quot;&lt;/span&gt;
rm ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Launching Docker&quot;&lt;/span&gt;
open -a Docker
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Waiting for Docker to start&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;until &lt;/span&gt;docker info &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;
    sleep 1
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Done.&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;=&amp;gt; Loading saved images&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;image &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IMAGES&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Loading &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; | base64&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    docker load -q -i &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tar&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;==&amp;gt; Done.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;popd&lt;/span&gt; &amp;gt;/dev/null
rm -r &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TMP_DIR&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>飞鱼</name></author><summary type="html">1、Main</summary></entry><entry><title type="html">jenkins + docker + git 持续集成</title><link href="http://firsh.me/2017/06/06/Jenkins-docker-kubectl-same-master/" rel="alternate" type="text/html" title="jenkins + docker + git 持续集成" /><published>2017-06-06T00:00:00+08:00</published><updated>2017-06-06T00:00:00+08:00</updated><id>http://firsh.me/2017/06/06/Jenkins-docker-kubectl-same-master</id><content type="html" xml:base="http://firsh.me/2017/06/06/Jenkins-docker-kubectl-same-master/">&lt;blockquote&gt;
  &lt;p&gt;git push 以后， jenkins 自动触发 代码打包，生成docker image , docker push 到 仓库，发布到环境里。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;安装jenkins&quot;&gt;安装jenkins&lt;/h1&gt;

&lt;p&gt;这里不建议用 Docker 镜像，因为下面 Jenkins 自身会需要调用 Docker 来启动任务。&lt;/p&gt;

&lt;p&gt;Jenkins + Docker + kubectl + git + Blue Ocean。&lt;/p&gt;

&lt;h2 id=&quot;导入-jenkins-源&quot;&gt;导入 jenkins 源&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins.io/redhat-stable/jenkins.repo
rpm --import http://pkg.jenkins.io/redhat-stable/jenkins.io.key


yum -y install jenkins 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;修改jenkins配置&quot;&gt;修改jenkins配置&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/sysconfig/jenkins

# 修改jenkins 目录
JENKINS_HOME=&quot;/opt/jenkins&quot;

# 修改jenkins 端口
JENKINS_PORT=&quot;9999&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;移动目录&quot;&gt;移动目录&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将目录移动过来，否则程序报错
mv /var/lib/jenkins /opt/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;启动服务&quot;&gt;启动服务&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start jenkins
systemctl enable jenkins
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;访问web-ui&quot;&gt;访问WEB UI&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://myip:9999/ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;生成密钥&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 切换用户
su jenkins


# 生成key
ssh-keygen -t rsa -b 4096 -C &quot;jenkins@git&quot;

# 查看key信息
cat /home/jenkins/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jenkins-后台配置&quot;&gt;jenkins 后台配置&lt;/h2&gt;

&lt;p&gt;进入 jenkins –&amp;gt; Credentials –&amp;gt; Add Credentials
&lt;img src=&quot;http://jicki.me/images/posts/jenkins/4.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择 系统管理 – &amp;gt; 管理插件&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;添加 Gradle Plugin 插件&lt;/li&gt;
  &lt;li&gt;添加 Git plugin 插件&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;常用插件

Build WIth Parameters   # 执行 构建 前手工输入参数

pipeline

Deploy Plugin   # build war 包以后部署

Email Extension Plugin  # 邮件发送

Multiple SCMs Plugin #多项目构建工具

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下载慢可直接下载 hpi 文件，通过高级 导入插件安装&lt;/p&gt;

&lt;p&gt;选择 系统管理 – &amp;gt; Global Tool Configuration&lt;/p&gt;

&lt;p&gt;安装JDK&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/1.png&quot; alt=&quot;描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装 Gradle&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/2.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装 Git&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/3.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建项目  选择 自由风格 的项目&lt;/p&gt;

&lt;p&gt;源码管理选择 Git&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/5.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;构建 选择  Invoke Gradle script&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/6.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;构建触发器&quot;&gt;构建触发器&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 勾选 Poll SCM

# 每两分钟检查一次git代码是否有更新
H/2 * * * *
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;配置-邮件&quot;&gt;配置 邮件&lt;/h2&gt;

&lt;p&gt;首先必须安装 Email Extension Plugin 插件&lt;/p&gt;

&lt;p&gt;系统管理 –&amp;gt; 系统设置 – &amp;gt; Jenkins Location&lt;/p&gt;

&lt;p&gt;配置系统管理员邮件地址 — &amp;gt;  xxx@163.com&lt;/p&gt;

&lt;p&gt;配置 Extended E-mail Notification&lt;/p&gt;

&lt;p&gt;SMTP Server =&lt;/p&gt;

&lt;p&gt;点击高级&lt;/p&gt;

&lt;p&gt;勾选 Use SMTP Authentication&lt;/p&gt;

&lt;p&gt;输入 发送 用户 与 密码&lt;/p&gt;

&lt;p&gt;填写 SMTP port&lt;/p&gt;

&lt;p&gt;Default Content Type 选择 HTML (text/html)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Default Subject =  构建通知:$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!


Default Content = 

&amp;lt;b style=&quot;font-size:12px&quot;&amp;gt;(本邮件是程序自动下发的，请勿回复，&amp;lt;span style=&quot;color:red&quot;&amp;gt;请相关人员fix it,重新提交到git 构建&amp;lt;/span&amp;gt;)&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;项目名称：$PROJECT_NAME&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;构建编号：$BUILD_NUMBER&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;GIT版本号：${GIT_REVISION}&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;构建状态：$BUILD_STATUS&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;触发原因：${CAUSE}&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;构建日志地址：&amp;lt;a href=&quot;${BUILD_URL}console&quot;&amp;gt;${BUILD_URL}console&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;构建地址：&amp;lt;a href=&quot;$BUILD_URL&quot;&amp;gt;$BUILD_URL&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&amp;lt;b style=&quot;font-size: 12px;&quot;&amp;gt;变更集:${JELLY_SCRIPT,template=&quot;html&quot;}&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;hr&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/8.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;项目 – &amp;gt; 构建后操作 — &amp;gt; 添加 Editable Email Notification&lt;/p&gt;

&lt;p&gt;拉到最下面 — &amp;gt; 点击 Advanced Settings…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/9.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recipient List 添加 收件邮箱 多个邮件以空格 隔开&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/jenkins/10.png&quot; alt=&quot;此处输入图片的描述&quot; /&gt;&lt;/p&gt;

&lt;p&gt;原文作者 &lt;a href=&quot;https://jicki.me/&quot; title=&quot;Title&quot;&gt;小炒肉&lt;/a&gt; .&lt;/p&gt;</content><author><name>飞鱼</name></author><summary type="html">git push 以后， jenkins 自动触发 代码打包，生成docker image , docker push 到 仓库，发布到环境里。</summary></entry><entry><title type="html">kargo kubernetes 1.6.4</title><link href="http://firsh.me/2017/06/06/kargo-k8s-1.6.4/" rel="alternate" type="text/html" title="kargo kubernetes 1.6.4" /><published>2017-06-06T00:00:00+08:00</published><updated>2017-06-06T00:00:00+08:00</updated><id>http://firsh.me/2017/06/06/kargo-k8s-1.6.4</id><content type="html" xml:base="http://firsh.me/2017/06/06/kargo-k8s-1.6.4/">&lt;h1 id=&quot;1初始化环境&quot;&gt;1、初始化环境&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;kargo update k8s 1.6.4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;11环境&quot;&gt;1.1、环境：&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;节点&lt;/th&gt;
      &lt;th&gt;IP&lt;/th&gt;
      &lt;th&gt;角色&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;node-1&lt;/td&gt;
      &lt;td&gt;10.6.0.52&lt;/td&gt;
      &lt;td&gt;Master&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node-2&lt;/td&gt;
      &lt;td&gt;10.6.0.53&lt;/td&gt;
      &lt;td&gt;Master&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node-3&lt;/td&gt;
      &lt;td&gt;10.6.0.55&lt;/td&gt;
      &lt;td&gt;Node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;node-4&lt;/td&gt;
      &lt;td&gt;10.6.0.56&lt;/td&gt;
      &lt;td&gt;Node&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;12配置ssh-key-登陆&quot;&gt;1.2、配置SSH Key 登陆&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 确保本机也可以 ssh 连接，否则下面部署失败

ssh-keygen -t rsa -N &quot;&quot;

ssh-copy-id -i /root/.ssh/id_rsa.pub 10.6.0.52

ssh-copy-id -i /root/.ssh/id_rsa.pub 10.6.0.53

ssh-copy-id -i /root/.ssh/id_rsa.pub 10.6.0.55

ssh-copy-id -i /root/.ssh/id_rsa.pub 10.6.0.56

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;2获取-kargo&quot;&gt;2、获取 Kargo&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kargo 官方github
https://github.com/kubernetes-incubator/kargo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;21安装基础软件&quot;&gt;2.1、安装基础软件&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kargo 是基于 ansible 统一部署，所以必须安装 ansible&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 安装 centos 额外的yum源
yum install -y epel-release

# 安装 软件
yum install -y python-pip python34 python-netaddr python34-pip ansible

# 如果 报 no test named 'equalto' ，需要升级 Jinja2
pip install --upgrade Jinja2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;22获取源码&quot;&gt;2.2、获取源码&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/kubernetes-incubator/kargo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;23编辑配置文件&quot;&gt;2.3、编辑配置文件&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd kargo

vim inventory/group_vars/k8s-cluster.yml


这里主要修改一些 网段，密码 等信息


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;24生成集群配置文件&quot;&gt;2.4、生成集群配置文件&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd kargo

CONFIG_FILE=inventory/inventory.cfg python3 contrib/inventory_builder/inventory.py 10.6.0.52 10.6.0.53 10.6.0.55 10.6.0.56

# 输入如下：

DEBUG: Adding group all
DEBUG: Adding group kube-master
DEBUG: Adding group kube-node
DEBUG: Adding group etcd
DEBUG: Adding group k8s-cluster:children
DEBUG: Adding group calico-rr
DEBUG: adding host node1 to group all
DEBUG: adding host node2 to group all
DEBUG: adding host node3 to group all
DEBUG: adding host node4 to group all
DEBUG: adding host kube-node to group k8s-cluster:children
DEBUG: adding host kube-master to group k8s-cluster:children
DEBUG: adding host node1 to group etcd
DEBUG: adding host node2 to group etcd
DEBUG: adding host node3 to group etcd
DEBUG: adding host node1 to group kube-master
DEBUG: adding host node2 to group kube-master
DEBUG: adding host node1 to group kube-node
DEBUG: adding host node2 to group kube-node
DEBUG: adding host node3 to group kube-node
DEBUG: adding host node4 to group kube-node


# 生成的配置文件在当前目录，既 kargo/inventory 目录下 inventory.cfg

# 配置文件如下(默认配置双master，可自行修改)：
# SSH 非 22 端口 添加 ansible_port=xxx

[all]
node1    ansible_host=10.6.0.52 ansible_port=33 ip=10.6.0.52
node2    ansible_host=10.6.0.53 ansible_port=33 ip=10.6.0.53
node3    ansible_host=10.6.0.55 ansible_port=33 ip=10.6.0.55
node4    ansible_host=10.6.0.56 ansible_port=33 ip=10.6.0.56

[kube-master]
node1    
node2    

[kube-node]
node1    
node2    
node3    
node4    

[etcd]
node1    
node2    
node3    

[k8s-cluster:children]
kube-node        
kube-master      

[calico-rr]

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1.6.4 镜像下载

http://pan.baidu.com/s/1nvUc5mx


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;25部署集群&quot;&gt;2.5、部署集群&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 执行如下命令，请确保SSH KEY 登陆, 端口一致

ansible-playbook -i inventory/inventory.cfg cluster.yml -b -v --private-key=~/.ssh/id_rsa

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;26测试&quot;&gt;2.6、测试&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 两个 master 中使用 kubectl get nodes

[root@k8s-node-1 ~]# kubectl get nodes
NAME         STATUS    AGE       VERSION
k8s-node-1   Ready     16m       v1.6.4+coreos.0
k8s-node-2   Ready     20m       v1.6.4+coreos.0
k8s-node-3   Ready     16m       v1.6.4+coreos.0
k8s-node-4   Ready     16m       v1.6.4+coreos.0



[root@k8s-node-2 ~]# kubectl get nodes
NAME         STATUS    AGE       VERSION
k8s-node-1   Ready     11m       v1.6.4+coreos.0
k8s-node-2   Ready     16m       v1.6.4+coreos.0
k8s-node-3   Ready     11m       v1.6.4+coreos.0
k8s-node-4   Ready     11m       v1.6.4+coreos.0




[root@k8s-node-1 ~]# kubectl get pods --namespace=kube-system
NAME                                  READY     STATUS    RESTARTS   AGE
dnsmasq-411420702-z0gkx               1/1       Running   0          16m
dnsmasq-autoscaler-1155841093-1hxdl   1/1       Running   0          16m
elasticsearch-logging-v1-kgt1t        1/1       Running   0          15m
elasticsearch-logging-v1-vm4bd        1/1       Running   0          15m
fluentd-es-v1.22-6gql6                1/1       Running   0          15m
fluentd-es-v1.22-8zkjh                1/1       Running   0          15m
fluentd-es-v1.22-cjskv                1/1       Running   0          15m
fluentd-es-v1.22-j4857                1/1       Running   0          15m
kibana-logging-2924323056-x3vjk       1/1       Running   0          15m
kube-apiserver-k8s-node-1             1/1       Running   0          15m
kube-apiserver-k8s-node-2             1/1       Running   0          20m
kube-controller-manager-k8s-node-1    1/1       Running   0          16m
kube-controller-manager-k8s-node-2    1/1       Running   0          21m
kube-proxy-k8s-node-1                 1/1       Running   0          16m
kube-proxy-k8s-node-2                 1/1       Running   0          21m
kube-proxy-k8s-node-3                 1/1       Running   0          16m
kube-proxy-k8s-node-4                 1/1       Running   0          16m
kube-scheduler-k8s-node-1             1/1       Running   0          16m
kube-scheduler-k8s-node-2             1/1       Running   0          21m
kubedns-3830354952-pfl7n              3/3       Running   4          16m
kubedns-autoscaler-54374881-64x6d     1/1       Running   0          16m
nginx-proxy-k8s-node-3                1/1       Running   0          16m
nginx-proxy-k8s-node-4                1/1       Running   0          16m



[root@k8s-node-1 ~]# kubectl get pods
NAME                             READY     STATUS    RESTARTS   AGE
netchecker-agent-3x3sj           1/1       Running   0          16m
netchecker-agent-ggxs2           1/1       Running   0          16m
netchecker-agent-hostnet-45k84   1/1       Running   0          16m
netchecker-agent-hostnet-kwvc8   1/1       Running   0          16m
netchecker-agent-hostnet-pwm77   1/1       Running   0          16m
netchecker-agent-hostnet-z4gmq   1/1       Running   0          16m
netchecker-agent-q3291           1/1       Running   0          16m
netchecker-agent-qtml6           1/1       Running   0          16m
netchecker-server                1/1       Running   0          16m


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 配置一个 nginx deplyment 与 nginx  service

apiVersion: extensions/v1beta1 
kind: Deployment 
metadata: 
  name: nginx-dm
spec: 
  replicas: 2
  template: 
    metadata: 
      labels: 
        name: nginx 
    spec: 
      containers: 
        - name: nginx 
          image: nginx:alpine 
          imagePullPolicy: IfNotPresent
          ports: 
            - containerPort: 80

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1 
kind: Service
metadata: 
  name: nginx-dm 
spec: 
  ports: 
    - port: 80
      targetPort: 80
      protocol: TCP 
  selector: 
    name: nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 导入 yaml 文件


[root@k8s-node-1 ~]# kubectl apply -f nginx.yaml 
deployment &quot;nginx-dm&quot; created
service &quot;nginx-dm&quot; created



[root@k8s-node-1 ~]# kubectl get pods -o wide
NAME                             READY     STATUS    RESTARTS   AGE       IP              NODE
nginx-dm-4194680597-0h071        1/1       Running   0          9m        10.233.75.8     k8s-node-4
nginx-dm-4194680597-dzcf3        1/1       Running   0          9m        10.233.76.124   k8s-node-3


[root@k8s-node-1 ~]# kubectl get svc -o wide    
NAME                 CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE       SELECTOR
kubernetes           10.233.0.1      &amp;lt;none&amp;gt;        443/TCP          39m       &amp;lt;none&amp;gt;
netchecker-service   10.233.0.126    &amp;lt;nodes&amp;gt;       8081:31081/TCP   33m       app=netchecker-server
nginx-dm             10.233.56.138   &amp;lt;none&amp;gt;        80/TCP           10m       name=nginx

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 部署一个  curl 的 pods 用来测试 内部通信


apiVersion: v1
kind: Pod
metadata:
  name: curl
spec:
  containers:
  - name: curl
    image: radial/busyboxplus:curl
    command:
    - sh
    - -c
    - while true; do sleep 1; done

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 导入 yaml 文件

[root@k8s-node-1 ~]# kubectl apply -f curl.yaml 
pod &quot;curl&quot; created

    
[root@k8s-node-1 ~]# kubectl get pods -o wide
NAME                             READY     STATUS    RESTARTS   AGE       IP              NODE
curl                             1/1       Running   0          2m        10.233.75.22    k8s-node-4


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 测试 curl --&amp;gt; nginx-svc


[root@k8s-node-1 ~]# kubectl exec -it curl curl nginx-dm


&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Welcome to nginx!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;35em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tahoma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Verdana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to nginx!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;For online documentation and support please refer to
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://nginx.org/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;nginx.org&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
Commercial support is available at
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://nginx.com/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;nginx.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;&lt;/span&gt;Thank you for using nginx.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 创建一个 zk  集群 zk-deplyment  和 service


apiVersion: extensions/v1beta1
kind: Deployment 
metadata: 
  name: zookeeper-1
spec: 
  replicas: 1
  template: 
    metadata: 
      labels: 
        name: zookeeper-1 
    spec: 
      containers: 
        - name: zookeeper-1
          image: jicki/zk:alpine 
          imagePullPolicy: IfNotPresent
          env:
          - name: NODE_ID
            value: &quot;1&quot;
          - name: NODES
            value: &quot;0.0.0.0,zookeeper-2,zookeeper-3&quot;
          ports:
          - containerPort: 2181

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: extensions/v1beta1 
kind: Deployment
metadata:
  name: zookeeper-2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zookeeper-2
    spec:
      containers:
        - name: zookeeper-2
          image: jicki/zk:alpine
          imagePullPolicy: IfNotPresent
          env:
          - name: NODE_ID
            value: &quot;2&quot;
          - name: NODES
            value: &quot;zookeeper-1,0.0.0.0,zookeeper-3&quot;
          ports:
          - containerPort: 2181

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: zookeeper-3
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: zookeeper-3
    spec:
      containers:
        - name: zookeeper-3
          image: jicki/zk:alpine
          imagePullPolicy: IfNotPresent
          env:
          - name: NODE_ID
            value: &quot;3&quot;
          - name: NODES
            value: &quot;zookeeper-1,zookeeper-2,0.0.0.0&quot;
          ports:
          - containerPort: 2181
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1 
kind: Service 
metadata: 
  name: zookeeper-1 
  labels:
    name: zookeeper-1
spec: 
  ports: 
    - name: client
      port: 2181
      protocol: TCP
    - name: followers
      port: 2888
      protocol: TCP
    - name: election
      port: 3888
      protocol: TCP
  selector: 
    name: zookeeper-1

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
apiVersion: v1 
kind: Service 
metadata: 
  name: zookeeper-2
  labels:
    name: zookeeper-2
spec: 
  ports: 
    - name: client
      port: 2181
      protocol: TCP
    - name: followers
      port: 2888
      protocol: TCP
    - name: election
      port: 3888
      protocol: TCP
  selector: 
    name: zookeeper-2

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
apiVersion: v1 
kind: Service 
metadata: 
  name: zookeeper-3
  labels:
    name: zookeeper-3
spec: 
  ports: 
    - name: client
      port: 2181
      protocol: TCP
    - name: followers
      port: 2888
      protocol: TCP
    - name: election
      port: 3888
      protocol: TCP
  selector: 
    name: zookeeper-3

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 查看状态  pods 与 service

[root@k8s-node-1 ~]# kubectl get pods -o wide
NAME                             READY     STATUS    RESTARTS   AGE       IP              NODE
zookeeper-1-3762028479-gd5rm     1/1       Running   0          1m        10.233.76.125   k8s-node-3
zookeeper-2-4266983361-cz80w     1/1       Running   0          1m        10.233.75.23    k8s-node-4
zookeeper-3-479264707-hlv3x      1/1       Running   0          1m        10.233.75.24    k8s-node-4



[root@k8s-node-1 ~]# kubectl get svc -o wide    
NAME                 CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE       SELECTOR
zookeeper-1          10.233.25.46    &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1m        name=zookeeper-1
zookeeper-2          10.233.49.4     &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1m        name=zookeeper-2
zookeeper-3          10.233.50.206   &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1m        name=zookeeper-3

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;27部署一个-nginx-ingress&quot;&gt;2.7、部署一个 Nginx Ingress&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kubernetes 暴露服务的方式目前只有三种：LoadBlancer Service、NodePort Service、Ingress；
什么是 Ingress ?  Ingress 就是利用 nginx haproxy 等负载均衡工具来暴露 Kubernetes 服务。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
# 首先 部署一个 http-backend, 用于统一转发 没有的域名 到指定页面。
# 官方 nginx  ingress 库 https://github.com/kubernetes/ingress/tree/master/examples/deployment/nginx

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 下载官方的 nginx  backend 文件

curl -O https://raw.githubusercontent.com/kubernetes/ingress/master/examples/deployment/nginx/default-backend.yaml


# 直接导入既可
[root@k8s-node-1 ~]# kubectl apply -f default-backend.yaml 
deployment &quot;default-http-backend&quot; created
service &quot;default-http-backend&quot; created

# 查看 deployment 与 service

[root@k8s-node-1 ~]# kubectl get deployment --namespace=kube-system
NAME                   DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
default-http-backend   1         1         1            1           33m


[root@k8s-node-1 ~]# kubectl get svc --namespace=kube-system       
NAME                    CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE
default-http-backend    10.233.20.232   &amp;lt;none&amp;gt;        80/TCP          33m

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 部署 Ingress Controller 组件

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 下载 官方 nginx-ingress-controller 的yaml文件

curl -O https://raw.githubusercontent.com/kubernetes/ingress/master/examples/deployment/nginx/nginx-ingress-controller.yaml

# 编辑 yaml 文件，打开 hostNetwork: true , 将端口绑定到宿主机中
# 这里面deployment 默认只启动了一个pods, 这里可以修改 kind: Deployment 为 kind: DaemonSet  并注释掉 replicas
# 或者 修改 replicas: 1  为 N 


vi nginx-ingress-controller.yaml

将 hostNetwork: true  前面的注释去掉



# 导入 yaml 文件

[root@k8s-node-1 ~]# kubectl apply -f nginx-ingress-controller.yaml 
deployment &quot;nginx-ingress-controller&quot; created


# 查看 deployment  或者  daemonsets
[root@k8s-node-1 yaml]# kubectl get deployment --namespace=kube-system
NAME                       DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
nginx-ingress-controller   1         1         1            1           31s


[root@k8s-node-1 yaml]# kubectl get daemonsets --namespace=kube-system
NAME                       DESIRED   CURRENT   READY     NODE-SELECTOR   AGE
nginx-ingress-controller   4         4         4         &amp;lt;none&amp;gt;          1m


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 最后开始 部署 Ingress
# 这里请先看看官方 ingress 的 yaml 写法
# https://kubernetes.io/docs/user-guide/ingress/


# 我们使用 之前创建的 nginx-dm  service，我们来写一个 ingress
# 首先查看一下 svc 

[root@k8s-node-1 yaml]# kubectl get svc
NAME                 CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
kubernetes           10.233.0.1      &amp;lt;none&amp;gt;        443/TCP                      1d
netchecker-service   10.233.0.126    &amp;lt;nodes&amp;gt;       8081:31081/TCP               1d
nginx-dm             10.233.56.138   &amp;lt;none&amp;gt;        80/TCP                       1d
zookeeper-1          10.233.25.46    &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1d
zookeeper-2          10.233.49.4     &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1d
zookeeper-3          10.233.50.206   &amp;lt;none&amp;gt;        2181/TCP,2888/TCP,3888/TCP   1d



# 创建 yaml 文件， 这里特别注意，如果 svc 在 kube-system 下
# 必须在 metadata: 下面添加 namespace: kube-system 指定命名空间

vim nginx-ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
  - host: nginx.jicki.me
    http:
      paths:
      - backend:
          serviceName: nginx-dm
          servicePort: 80


# 导入 yaml 文件

[root@k8s-node-1 ~]# kubectl apply -f nginx-ingress.yaml 
ingress &quot;nginx-ingress&quot; created


# 查看一下 创建的 ingress

[root@k8s-node-1 ~]# kubectl get ingresses
NAME            HOSTS            ADDRESS   PORTS     AGE
nginx-ingress   nginx.jicki.me             80        17s

# 这里显示 ADDRESS 为 空 实际上 所有 master 与 nodes 都绑定了
# 将域名解析到 任何一个 IP 上都可以。






# 下面访问 http://nginx.jicki.me/

# 这里注意，Ingresses 只做简单的端口转发。


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://jicki.me/images/posts/kagro/1.png&quot; alt=&quot;nginx&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;维护-faq&quot;&gt;维护 FAQ&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 卸载

cd kargo

ansible-playbook -i inventory/inventory.cfg reset.yml -b -v --private-key=~/.ssh/id_rsa

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 增加节点

# 首先编辑 inventory/inventory.cfg  增加一个节点 例：node5

[kube-node]
node1
node2
node3
node4
node5


# 执行命令 使用 --limit 参数

ansible-playbook -i inventory/inventory.cfg cluster.yml -b -v --private-key=~/.ssh/id_rsa --limit node5


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 报错1
# hostname 的问题
# 部署 kargo 必须配置 hostname 否则 多 master 会出现 无法创建 api 等 pods
# 如果 执行了 ansible-playbook 之前没改 hostname 必须删除 /tmp 下的 node[N]
# 否则更改 /etc/hosts 失败
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 报错 2

TASK [vault : check_vault | Set fact about the Vault cluster's initialization state] ***
Monday 10 April 2017  17:47:42 +0800 (0:00:00.088)       0:01:22.030 ********** 
fatal: [node1]: FAILED! =&amp;gt; {&quot;failed&quot;: true, &quot;msg&quot;: &quot;'dict object' has no attribute 'vault'&quot;}
fatal: [node3]: FAILED! =&amp;gt; {&quot;failed&quot;: true, &quot;msg&quot;: &quot;'dict object' has no attribute 'vault'&quot;}

# 解决方案 升级 ansible =&amp;gt; 2.2.1.0

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>飞鱼</name></author><summary type="html">1、初始化环境</summary></entry><entry><title type="html">Centos kafka 消息队列</title><link href="http://firsh.me/2017/06/06/kafka-install/" rel="alternate" type="text/html" title="Centos kafka 消息队列" /><published>2017-06-06T00:00:00+08:00</published><updated>2017-06-06T00:00:00+08:00</updated><id>http://firsh.me/2017/06/06/kafka-install</id><content type="html" xml:base="http://firsh.me/2017/06/06/kafka-install/">&lt;h1 id=&quot;kafka-消息队列&quot;&gt;kafka 消息队列&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;kafka new Version&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;安装配置&quot;&gt;安装配置&lt;/h2&gt;

&lt;p&gt;查询下载最新版本 kafka 
http://kafka.apache.org/downloads.html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://mirror.bit.edu.cn/apache/kafka/0.8.2.0/kafka-0.8.2.0-src.tgz
tar zxvf kafka-0.8.2.0-src.tgz
mv kafka-0.8.2.0-src /opt/local/kafka
cd /opt/local/kafka
./gradlew jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;提示: 
错误: 找不到或无法加载主类 org.gradle.wrapper.GradleWrapperMain
需要先安装 gradle&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://www.scala-lang.org/files/archive/scala-2.10.4.tgz
tar zxvf scala-2.10.4.tgz
mv scala-2.10.4 /usr/lib64/scala
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;设置环境变量&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export SACLA_HOME=/usr/lib64/scala/
export PATH=$SACLA_HOME/bin:$PATH
source /etc/profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后再执行 gradlew jar&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./gradlew jarAll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果 jarAll 会报错，java 版本不能为1.8 不然会报不兼容的错误，请使用1.7版本&lt;/p&gt;

&lt;p&gt;./gradlew jar –stacktrace  –info –debug&lt;/p&gt;

&lt;p&gt;创建日志目录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p /opt/local/kafka/logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑配置文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim config/server.properties
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将 log.dirs=/tmp/kafka-logs
改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;log.dirs=/opt/local/kafka/logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;将 zookeeper.connect=localhost:2181
改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zookeeper.connect=172.24.0.100:2181
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动程序&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nohup /opt/local/kafka/bin/zookeeper-server-start.sh /opt/local/kafka/config/zookeeper.properties &amp;amp;
nohup /opt/local/kafka/bin/kafka-server-start.sh /opt/local/kafka/config/server.properties &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;创建主题&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/opt/local/kafka/bin/kafka-topics.sh --create --zookeeper 192.168.20.200:2181 --replication-factor 1 --partitions 1 --topic LJ200
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看现有主题&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/opt/local/kafka/bin/kafka-topics.sh --list --zookeeper 192.168.20.200:2181
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>飞鱼</name></author><summary type="html">kafka 消息队列</summary></entry><entry><title type="html">CrateDB数据目录发生变动启动故障。</title><link href="http://firsh.me/2017/05/31/crateDb%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95%E5%8F%91%E7%94%9F%E4%BF%AE%E6%94%B9/" rel="alternate" type="text/html" title="CrateDB数据目录发生变动启动故障。" /><published>2017-05-31T00:00:00+08:00</published><updated>2017-05-31T00:00:00+08:00</updated><id>http://firsh.me/2017/05/31/crateDb%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95%E5%8F%91%E7%94%9F%E4%BF%AE%E6%94%B9</id><content type="html" xml:base="http://firsh.me/2017/05/31/crateDb%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95%E5%8F%91%E7%94%9F%E4%BF%AE%E6%94%B9/">&lt;p&gt;CrateDB数据目录发生变动启动故障。&lt;/p&gt;

&lt;h2 id=&quot;0x00&quot;&gt;0x00&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Crate Version 1.12
Linux Core 4.8
Node Number 20&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/QQ20170601-114658@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;今天项目要求重新启动crate数据库，因为用户名称发生了变动，所以导致文件没有权限。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.查看了一番发现时文件的所属发生了变动&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;#用root用户执行
chown -R admin:admin /home/tod/data

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.修改完成重新启动。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;/crate -d H
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images/QQ20170601-115231@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.确认启动成功&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;jps
&lt;/code&gt;&lt;/pre&gt;</content><author><name>飞鱼</name></author><summary type="html">CrateDB数据目录发生变动启动故障。</summary></entry><entry><title type="html">CICD。</title><link href="http://firsh.me/2017/05/30/CICD%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2/" rel="alternate" type="text/html" title="CICD。" /><published>2017-05-30T00:00:00+08:00</published><updated>2017-05-30T00:00:00+08:00</updated><id>http://firsh.me/2017/05/30/CICD%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2</id><content type="html" xml:base="http://firsh.me/2017/05/30/CICD%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2/">&lt;p&gt;CICD (travis) for my blog Success Full&lt;/p&gt;

&lt;h2 id=&quot;see&quot;&gt;See&lt;/h2&gt;

&lt;h2 id=&quot;travis-ci-&quot;&gt;Travis CI &lt;a href=&quot;https://travis-ci.org/zmatsh/zmatsh.github.io&quot;&gt;&lt;img src=&quot;https://travis-ci.org/zmatsh/zmatsh.github.io.svg?branch=master&quot; alt=&quot;Build Status&quot; /&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用jekyll搭建的一个免费博客，作为镜像托管在Github上&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>飞鱼</name></author><summary type="html">CICD (travis) for my blog Success Full</summary></entry></feed>